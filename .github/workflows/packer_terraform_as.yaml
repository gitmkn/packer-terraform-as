name: Build and deploy app

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  TENCENTCLOUD_REGION: ap-guangzhou
  TENCENTCLOUD_SECRET_KEY: ${{ secrets.TENCENTCLOUD_SECRET_KEY }}
  TENCENTCLOUD_SECRET_ID: ${{ secrets.TENCENTCLOUD_SECRET_ID }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get release version
        id: get_release_version
        run: echo "::set-env name=RELEASE_VERSION::$(git describe --tags --abbrev=0)"

      - name: Set output with release version
        id: set_output
        run: echo "RELEASE_VERSION=${RELEASE_VERSION}" >> $GITHUB_ENV

      - name: Print output variables
        run: echo "RELEASE_VERSION=${RELEASE_VERSION}"

      - name: Install Packer and Terraform dependencies
        run: sudo apt-get update && sudo apt-get install -y unzip wget

      - name: Download and install Packer
        run: |
          if ! command -v packer &> /dev/null
          then
            wget -O- https://apt.releases.hashicorp.com/gpg | sudo gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg
            echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
            sudo apt update && sudo apt install packer
            y | sudo mv packer /usr/local/bin/
          else
            echo "Packer is already installed"
          fi

      - name: Download and install Packer plugin
        run: packer plugins install github.com/hashicorp/tencentcloud

      - name: packer version
        run: packer version

      - name: Build image
        run: |
          packer build packer/packer_tencentcloud_cvm_jenkins_1.0.json

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Packer and Terraform dependencies
        run: sudo apt-get update && sudo apt-get install -y unzip wget

      - name: Get latest release version
        id: get_version
        run: echo ::set-output name=version::$(curl --silent "https://api.github.com/repos/gitmkn/packer_terraform_as/releases/latest" | grep '"tag_name":' | sed -E 's/.*"([^"]+)".*/\1/')

      - name: Use the version number
        run: echo "The latest release version is ${{ steps.get_version.outputs.version }}"

      - name: Download and install Terraform
        run: |
          VERSION=$(echo "${{ steps.get_version.outputs.version }}")
          if ! command -v terraform &> /dev/null
          then
            wget https://releases.hashicorp.com/terraform/$VERSION/terraform_$VERSION_linux_amd64.zip
            unzip terraform_$VERSION_linux_amd64.zip
            sudo mv terraform /usr/local/bin/
          else
            echo "Terraform is already installed"
          fi

      - name: terraform version
        run: terraform version

      - name: cd terraform ...
        run: |
          cd terraform/as
          terraform init
          terraform apply -auto-approve

